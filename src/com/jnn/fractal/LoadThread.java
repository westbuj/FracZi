package com.jnn.fractal;

import com.jnn.expressions.Expression;import com.jnn.expressions.MathOperand;import com.jnn.util.ANR;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.res.Resources;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Rect;





public class LoadThread extends Thread implements Runnable {
//public double bigX,bigY,smallX,smallY;		public LoadThread(){					}	@Override
	public void run() {		//	MainActivity.splashMap = ANR.getRawResourceAsBitmapByName(r, "desktop_1");		//	MainActivity.splashMap = ANR.getRawResourceAsBitmapByName(r, "frac_splash"); 			/*renderHolder=Bitmap.createBitmap(480,800, Bitmap.Config.ARGB_8888);			tempHolder=Bitmap.createBitmap(renderHolder.getWidth(),renderHolder.getHeight(), Bitmap.Config.ARGB_8888);			renderCanvas = new Canvas(renderHolder);			renderCanvas.drawBitmap(splashMap, 0,0,null);			rawImage=ANR.getBitArray(tempHolder);			*/								while (MainView.vWidth < 0 && MainView.vHeight < 0)			try {				Thread.sleep(100);			} catch (InterruptedException e1) {				// TODO Auto-generated catch block				e1.printStackTrace();			}														ANR.setupStorage("fraczi");			Bitmap tMap = null;						if (ANR.isFile("fz_state")){  								try {					String XML = ANR.getFileContentsAsString( "fz_state");								MainActivity.rj=RenderJob.createFromXmlString(XML);					if (ANR.isFile("fZ_img_state.png"))					{						tMap = ANR.getBitmap(MainActivity.mContext,"fZ_img_state.png"); 						if (tMap != null)						{							if (tMap.getWidth() == MainView.vWidth && tMap.getHeight() == MainView.vHeight) 							{								MainActivity.rj.resumeJob = true;							}							else							{								tMap = null;								MainActivity.rj.resumeJob = false;							}												}					}																					} catch (Exception e) {					// TODO Auto-generated catch block					MainActivity.rj=null;					tMap = null;									}											}							if (tMap == null && MainActivity.rj != null)			{				tMap = MainActivity.DesktopMap;				MainActivity.rj.resumeJob  =false;				 			}			//tMap.recycle();			 			//MainActivity.rj=null;			//@COM(@ABS(A),@ABS(B)) * @COM(@ABS(A),@ABS(B)) + C			if (MainActivity.rj==null)			{				 																	MainActivity.rj =RenderJob.createFromXmlString("<fracZi><A_SEED value='0.0'/><B_SEED value='0.0'/><EQ value='z * z + C'/><HEIGHT value='533.0'/><WIDTH value='320.0'/><X1 value='-1.8544937155304506'/><X2 value='0.5702738218855513'/><Y1 value='-2.0828453601970023'/><Y2 value='1.9559080693115258'/><MAX_INF value='5000000.0'/><START_INF value='4.0'/><INF_INC value='M * 1.3'/><PROG_FLAG value='false'/><PROG_WEIGHT value='2.0'/><MAX_ITS value='3500.0'/><START_ITS value='24.0'/><ITS_INC value='P + 50'/><COLOR_MODE value='2'/><RED_EQ value='b / a'/><GREEN_EQ value='a / m'/><BLUE_EQ value='n / p'/><CYAN_EQ value='b / a'/><YELLOW_EQ value='(a + b) / (2 * M)'/><MAGENTA_EQ value='a / b'/><BLACK_EQ value='n / p'/><HUE_EQ value='.6667'/><SATURATION_EQ value='b / a'/><LEVEL_EQ value='a / b'/><AVG_FLAG value='false'/><AVG_WEIGHT value='1.0'/><AVG_RADIUS value='1.0'/><AVG_PASSES value='3.0'/><CUR_INF value='8.788000000000002'/><CUR_ITS value='154.0'/><CUR_X value='131'/><CUR_Y value='302'/><RESUME value='false'/></fracZi>") ;			MainActivity.rj.w = MainView.vWidth;			MainActivity.rj.h = MainView.vHeight;			tMap = MainActivity.DesktopMap;			}						MainView.renderBox.set(0,5,MainActivity.rj.w,20);			MainView.renderBoxLength = MainActivity.rj.w;									//tMap = MainActivity.DesktopMap;								establishEnvironment(MainActivity.rj, tMap);						MainActivity.mQueue.start();						MainActivity.mQueue.addTask(new RenderThread(MainActivity.rj));						//loadActionMenu();														MainView.loading = false;						SleepThread s = new SleepThread();			s.start();
	}													public static void loadActionMenu(){		AlertDialog.Builder actionMenuB = new AlertDialog.Builder(MainActivity.mContext);		actionMenuB.setTitle("Choose Action");		actionMenuB.setItems(new String[]{"Zoom in","Center","Zoom out","Reset","Cancel"}, 				new DialogInterface.OnClickListener(){					public void onClick(DialogInterface dialog, int which)					{						// The 'which' argument contains the index position               // of the selected item						switch (which)						{						case 0:							RenderThread.zoom_in(Math.min(MainActivity.mouseSX,MainActivity.TrackMouseSX), Math.min(MainActivity.mouseSY,MainActivity.TrackMouseSY),Math.max(MainActivity.mouseSX,MainActivity.TrackMouseSX),Math.max(MainActivity.mouseSY,MainActivity.TrackMouseSY));							break;                            						case 1:														RenderThread.center(Math.min(MainActivity.mouseSX,MainActivity.TrackMouseSX), Math.min(MainActivity.mouseSY,MainActivity.TrackMouseSY),Math.max(MainActivity.mouseSX,MainActivity.TrackMouseSX),Math.max(MainActivity.mouseSY,MainActivity.TrackMouseSY));						    break;                              						case 2:							RenderThread.zoom_out(Math.min(MainActivity.mouseSX,MainActivity.TrackMouseSX), Math.min(MainActivity.mouseSY,MainActivity.TrackMouseSY),Math.max(MainActivity.mouseSX,MainActivity.TrackMouseSX),Math.max(MainActivity.mouseSY,MainActivity.TrackMouseSY));							break;   						case 3:							RenderThread.reset();							break;                              default:                        	   MainActivity.slowThread =false;                               break;													}										}});						MainActivity.actionMenu = actionMenuB.create();	}		public void establishEnvironment(RenderJob rj, Bitmap tMap)	{				rj.w =MainView.vWidth;		rj.h =MainView.vHeight;				rj.updateHandler = MainActivity.updateImage;		rj.imageArray = MainActivity.rawImage;				MainActivity.renderHolder = Bitmap.createBitmap(rj.w, rj.h,Bitmap.Config.ARGB_8888);		MainActivity.tempHolder=Bitmap.createBitmap(MainActivity.renderHolder.getWidth(),MainActivity.renderHolder.getHeight(), Bitmap.Config.ARGB_8888);		MainActivity.renderCanvas = new Canvas(MainActivity.renderHolder);				drawBitmap_Fill(tMap,MainActivity.renderCanvas,rj.w,rj.h);				//MainActivity.renderCanvas.drawBitmap(tMap, 0,0,null);					Canvas tempCanvas = new Canvas(MainActivity.tempHolder);		drawBitmap_Fill(tMap,tempCanvas,rj.w,rj.h);		//tempCanvas.drawBitmap(tMap, 0,0,null);					MainActivity.rawImage=ANR.getBitArray(MainActivity.tempHolder);																	rj.imageArray = MainActivity.rawImage;		rj.bufferCanvas = MainActivity.renderCanvas ;		MainView.dst.set(0,0,rj.w,rj.h);		MainView.src.set(0,0,rj.w,rj.h);	//	MainActivity.rj.resumeJob = false;	}		public static void drawBitmap_Fill(Bitmap source, Canvas target,int tW, int th)	{		Rect src = new Rect(0,0,source.getWidth(),source.getHeight());		Rect dst = new Rect(0,0,tW,th);				target.drawBitmap(source, src, dst, null);			}	
}